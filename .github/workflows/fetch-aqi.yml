name: Fetch AQI cache

on:
  schedule:
    - cron: "*/10 * * * *"     # 每 10 分鐘（UTC）
  workflow_dispatch: {}         # 允許手動執行

permissions:
  contents: write

concurrency:
  group: fetch-aqi
  cancel-in-progress: true

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # 檢查 Secret 是否帶進來（不會輸出金鑰內容）
      - name: Debug - check secrets & tree
        env:
          HAS_KEY: ${{ secrets.MOENV_API_KEY != '' }}
        run: |
          echo "MOENV_API_KEY present? $HAS_KEY"
          echo "Top-level files:"; ls -la | sed -n '1,120p'

      # 取得 MoENV 原始資料
      - name: Fetch MoENV → raw.json
        env:
          MOENV_API_KEY: ${{ secrets.MOENV_API_KEY }}
          DATASET: aqx_p_432
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${MOENV_API_KEY:-}" ]]; then
            echo "❌ MOENV_API_KEY not found (Settings → Secrets → Actions → Repository secrets)"; exit 1
          fi
          URL="https://data.moenv.gov.tw/api/v2/${DATASET}?offset=0&limit=1000&api_key=${MOENV_API_KEY}"
          echo "GET $URL"
          HTTP_CODE=$(curl -sS -w "%{http_code}" -o raw.json "$URL" || true)
          echo "HTTP_CODE=$HTTP_CODE"
          if [[ "$HTTP_CODE" != "200" ]]; then
            echo "❌ HTTP $HTTP_CODE"; echo "Response preview:"; sed -n '1,80p' raw.json; exit 2
          fi
          echo "✅ Downloaded raw.json (size: $(wc -c < raw.json) bytes)"

      # 正規化鍵名（不使用 gsub，轉小寫並把 .、- -> _）
      # 如需只保留台北測站，可將下面 FILTER_TAIPEI=1，並在 jq 加上 select 條件（見註解）
      - name: Normalize → aqi.json
        shell: bash
        env:
          FILTER_TAIPEI: "0"     # 想只輸出台北站改成 "1"
        run: |
          set -euo pipefail

          # jq 過程：鍵名小寫 & '.' / '-' 變成 '_'（兼容舊版 jq）
          JQ_BASE='
            {
              source: "https://data.moenv.gov.tw/api/v2/aqx_p_432",
              generated_utc: (now | todateiso8601),
              count: ( ( .records
                | map(
                    with_entries(
                      .key |= ( ascii_downcase | explode
                                | map( if .==46 or .==45 then 95 else . end ) # 46 ".", 45 "-", 95 "_"
                                | implode )
                    )
                  )
                ) | length ),
              records: (
                .records
                | map(
                    with_entries(
                      .key |= ( ascii_downcase | explode
                                | map( if .==46 or .==45 then 95 else . end )
                                | implode )
                    )
                  )
              )
            }
          '

          if [[ "$FILTER_TAIPEI" == "1" ]]; then
            # 只保留台北市（可改白名單：sitename 局部選擇）
            jq "$JQ_BASE
                | .records = (.records
                    | map(
                        select(
                          (.county? == \"臺北市\") or
                          (.county? == \"台北市\") or
                          (.sitename? | IN(\"中山\",\"大同\",\"大直\",\"士林\",\"內湖\",\"松山\",\"南港\",\"萬華\",\"古亭\",\"景美\",\"陽明\",\"文山\",\"大安\"))
                        )
                      )
                  )
                | .count = (.records | length)
              " raw.json > aqi.json
          else
            jq "$JQ_BASE" raw.json > aqi.json
          fi

          rm -f raw.json
          echo "✅ Wrote aqi.json (size: $(wc -c < aqi.json) bytes, count: $(jq -r '.count' aqi.json))"

      # 若你的 GitHub Pages 用 /docs 目錄，取消註解以下兩行，前端改抓 docs/aqi.json
      # - name: Move cache to docs/
      #   run: |
      #     mkdir -p docs
      #     mv -f aqi.json docs/aqi.json

      # 強制加入（即使 .gitignore 忽略 *.json），且只有有變更才 commit
      - name: Commit and push if changed
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 強制追蹤
          if [ -f aqi.json ]; then git add -f aqi.json; fi
          if [ -f docs/aqi.json ]; then git add -f docs/aqi.json; fi

          # 沒有 staged 變更就跳過
          if git diff --cached --quiet; then
            echo "ℹ️ No staged changes to commit"
            exit 0
          fi

          git commit -m "chore(aqi): update cache $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push
          echo "✅ Pushed updated cache"
